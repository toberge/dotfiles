        # # # # # # # # #
# # # # # S X H K D R C # # # # #
        # # # # # # # # #

# WM independent hotkeys {{{

# terminal emulator
super + Return
	alacritty & sfx open

# program launcher with icons
super + d
	sfx menu & rofi -show drun -show-icons && sfx open

# program launcher
super + shift + d
	sfx menu & rofi -show run && sfx open

# window switcher
super + Tab
        rofi -show window -show-icons & sfx menu

# command launcher (press any key to exit)
super + ctrl + d
        rofi -dmenu -theme ~/.config/rofi/themes/cmd.rasi \
            | awk '\{ print"\""$0"; read -n1\"" \}' \
            | xargs --no-run-if-empty alacritty -e bash -c \
            & sfx menu

# emoji keyboard, using rofi-emoji
super + period
        rofi -show emoji & sfx menu

# kaomoji keyboard, using splatmoji
super + shift + period
        splatmoji --disable-emoji-db copy & sfx menu

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd & sfx apply

# capture using Flameshot - set format to %FT%H:%M:%S
Print
        flameshot gui & sfx shutter

# take screenshot of entire desktop
shift + Print
        screenshot full && sfx shutter

# pick a window or region using maim
ctrl + Print
        screenshot region && sfx shutter

# }}}

# Launch apps {{{

# color picker
super + u
        colorpicker --one-shot --short | tee /tmp/color \
            | xargs dunstify --icon none; \
            xclip -selection clipboard -rmlastnl -i /tmp/color


# ranger
super + {_,shift + }e
        alacritty -e "ranger" & sfx open

# calculator
XF86Calculator
        gnome-calculator & sfx open

# mail
{super + F1,XF86Mail}
        thunderbird & sfx open

# glava (music visualizer) in given position
super + space; g; {h,j,k,l}
        echo -e "radial\ngraph\ncircle\nbars\nwave" \
            | rofi -dmenu -p "glava module" \
            | xargs glava \
            --request="setgeometry {0 0, 0 1080, 0 0, 1920 0} 1920 1080" \
            --force-mod \
            & sfx open

# common apps
super + space; {w, t, f}
        {firefox, thunderbird, thunar || nautilus} & sfx open

# other common apps
super + space; {p, z}
        {zathura, zathura} & sfx open

super + plus
        sfx menu & find ~/Documents -maxdepth 1 -type f \( -name "*.pdf" -or -name "*.djvu" \) -print | sed -E 's/.*\///g' | rofi -dmenu -i | xargs -n1 -I % zathura ~/Documents/%

# tools
super + space; {c, l}
        {gnome-calculator, lxappearance} & sfx open

# dev tools
super + space; {i, u}
        {gtk-launch jetbrains-idea, code-oss} & sfx open

# media & games
super + space; {m, s, d}
        {spotify, steam, discord} & sfx open

# sidebar
super + space; {super + space, space}
        pgrep eww && eww kill || eww --detach open main_window

# }}}

# System control {{{

# lock the screen
super + shift + x
        lockmeup & sfx shutter

# power menu
super + ctrl + x
        powermenu & sfx menu

# brightness
XF86MonBrightness{Up,Down}
        backlight --notify {up,down} 5

# volume
XF86Audio{Raise,Lower}Volume
        volume --notify {up, down} & sfx open

XF86AudioMute
        volume --notify mute & sfx open

# media player
XF86Audio{Play,Next,Prev,MicMute}
        playerctl --ignore-player=chromium {play-pause,next,previous,play-pause}

#Â }}}

# BSPWM hotkeys {{{

# restart bspwm
super + alt + r
	bspc wm -r

# close and kill
super + {_,shift + }q
	bspc node -{c,k} & sfx close

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next & sfx toggle

# toggle bar
super + shift + f
    if pgrep polybar; then \
        killall -q polybar; bspc config top_padding 0; \
    else \
        ~/.config/polybar/launch.sh; \
        sleep .4; \
        bspc config border_width 3; \
    fi

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# }}}

# State/flags {{{

# set the window state
# - thanks baskerville, see issue #310
super + {shift + t,s,shift + space,f}
    state={pseudo_tiled,floating,floating,fullscreen}; \
    bspc query -N "focused.$\{state\}" && state=tiled; \
    bspc node -t "$state" & sfx toggle

super + t
        bspc node -t tiled & sfx toggle

# set the node flags
super + n; {m,l,s,p}
	bspc node -g {marked,locked,sticky,private} & sfx toggle

# set sticky
super + shift + s
        bspc node -g sticky & sfx toggle

# }}}

# Focus/swap {{{

# focus the node in the given direction
super + {h,j,k,l}
	bspc node -f {west,south,north,east}

# swap or move node in given direction
# (allows moving node to empty workspace)
super + shift + {h,j,k,l}
    direction={west,south,north,east}; \
       bspc node -s $direction.local --follow \
    || bspc node -m $direction --follow

# like promotion/demotion in master-stack WMs
# (last.local or smallest.local? who knows?)
# swap with biggest or swap which is biggest
super + g
	bspc node -s biggest.local || bspc node -s last.local

# focus the node for the given path jump
super + {p, b, shift + p, alt + shift + p}
        bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
alt + {_,shift + } + Tab
	bspc node -f {next,prev}.local.leaf

# focus the next/previous desktop in the current monitor
ctrl + alt + {Left,Right}
	bspc desktop -f {prev,next,prev,next}.occupied.local

# move desktop left/right
ctrl + alt + shift + {Left,Right}
	bspc desktop -s {prev,next,prev,next} --follow

# focus the last desktop
#super + Tab
	#bspc desktop -f last & sfx browse

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus the given desktop or switch to last
# credz to https://www.reddit.com/r/bspwm/comments/asbcp1/new_desktop_and_back_and_forth/egtopar
super + {1-9,0}
    desktop='^{1-9,10}'; \
    sfx browse & bspc query -D -d "$desktop.focused" && bspc desktop -f last || bspc desktop -f "$desktop"

# send node to the given desktop
super + shift + {1-9,0}
	bspc node -d '^{1-9,10}' & sfx apply

# }}}

# Layout {{{

# rotate parent or desktop layout
super + {_,shift +} r
        bspc node @{parent,/} --rotate 90 --equalize

# flip layout of entire desktop vert/hor
super + {_,shift +} w
        bspc node @/ --flip {vertical,horizontal} --equalize

# }}}

# Receptacles {{{
# (not working atm)

# super + plus
#         bspc node -i

# super + minus
#         bspc node -k '.leaf.!window' & sfx close

# }}}

# Preselect {{{

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# }}}

# Move and resize {{{

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# }}}
