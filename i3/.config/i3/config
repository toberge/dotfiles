################################
# i3 config file (v4)
# Modified by *me* into a ~terrifying monster~
#
# Documentation at https://i3wm.org/docs/userguide.html

set $mod Mod4

# Look, there's even an optional sound theme
# Dunno where I'll put the actual files

set $browse canberra-gtk-play -f $HOME/.sounds/browse.wav
set $close canberra-gtk-play -f $HOME/.sounds/close.wav
set $open canberra-gtk-play -f $HOME/.sounds/open.wav
set $toggle canberra-gtk-play -f $HOME/.sounds/toggle.wav
set $menu canberra-gtk-play -f $HOME/.sounds/menu.wav
set $apply canberra-gtk-play -f $HOME/.sounds/apply.wav
set $shutter canberra-gtk-play -f $HOME/.sounds/shutter.wav

set $volumestep 5

#exec_always --no-startup-id wal -i $pywal
exec_always --no-startup-id wal -R

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} blok below.
font pango: Ubuntu Regular 11

################################
# configure window borders (default + shortcuts)

#hide_edge_borders none
# default_border pixel 
default_border none
# change to pixel x everywhere if specific
default_floating_border normal

# disabling borders and window titles
hide_edge_borders smart

bindsym $mod+u border none, exec $toggle
bindsym $mod+y border pixel, exec $toggle
bindsym $mod+n border normal, exec $toggle

bindsym $mod+Shift+s sticky toggle

################################
# SHOW THOSE GAPS DAMMIT
#gaps inner 14
#gaps outer -2
#gaps inner 0
#gaps outer 0
gaps inner 15 # was 20
gaps outer 0

smart_gaps on
smart_borders no_gaps
#focus_follows_mouse no # point of contention...

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)

################################
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec gnome-terminal && wal -i $pywal # hacky solution...
bindsym $mod+Return exec urxvt, exec $open

# kill focused window
bindsym $mod+Shift+q kill, exec $close
bindsym $mod+q kill, exec $close

################################
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left, exec $toggle
bindsym $mod+Shift+j move down, exec $toggle
bindsym $mod+Shift+k move up, exec $toggle
bindsym $mod+Shift+l move right, exec $toggle

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left, exec $toggle
bindsym $mod+Shift+Down move down, exec $toggle
bindsym $mod+Shift+Up move up, exec $toggle
bindsym $mod+Shift+Right move right, exec $toggle

# split in horizontal orientation
bindsym $mod+b split h; exec notify-send "splitting horizontally", exec $toggle

# split in vertical orientation
bindsym $mod+v split v; exec notify-send "splitting vertically", exec $toggle

# toggle split direction (yay)
bindsym $mod+t split toggle, exec $toggle
bindsym $mod+Shift+t layout toggle split, exec $toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle, exec $toggle

# change container layout (stacked, tabbed, toggle split)
set $layout_mode (s)tacked, (t)abbed layout, (n)ormal i3
mode "$layout_mode" {
    bindsym s layout stacking; mode "default", exec $apply
    bindsym t layout tabbed; mode "default", exec $apply
    bindsym n layout toggle split; mode "default", exec $apply

    bindsym Return mode "default", exec $close
    bindsym Escape mode "default", exec $close
    bindsym $mod+s mode "default", exec $close
}
bindsym $mod+s mode "$layout_mode", exec $shutter

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle, exec $toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle, exec $toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad; exec notify-send "moved to skratchpad", exec $apply

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show, exec $apply

  ###########################################
 ## HEY HERE ARE KEYBINDS U WANT EM RIGHT ##
###########################################

# key-bindings: run xmodmap -pke to get info about keys 
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%, exec $open #increase sound volume
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%, exec $open #decrease sound volume
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound
bindsym XF86AudioRaiseVolume exec --no-startup-id volume -nl -i $volumestep, exec $open #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id volume -nl -d $volumestep, exec $open #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id volume -mnl, exec $open # mute sound
# SET SINK ID TO 0 not 2 like default idk. 

# brightness maybe
bindsym XF86MonBrightnessUp exec xbacklight -inc 10, exec $open
bindsym XF86MonBrightnessDown exec xbacklight -dec 10, exec $open

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause # do the toggle
bindsym Scroll_Lock exec playerctl play-pause # for desktoppers
#bindsym XF86AudioPause exec playerctl pause #doesn't work here
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


# screenshot (requires scrot...)
# copy-paste from this thread:
# https://www.reddit.com/r/i3wm/comments/8yx7ju/i3_screenshot_application/
# Desktop screenshot
bindsym --release Print exec "scrot ~/Pictures/screens/$(date --iso-8601='seconds').png -m -e 'xclip -selection c -t image/png < $f'"; exec notify-send "scrot-ed entire screen", exec $apply
# Choose window
bindsym --release Mod1+Sys_Req exec notify-send "select window"; exec "import -window `xwininfo | awk '/.*Window id:.*/ {print $4}'` ~/Pictures/screens/$(date --iso-8601='seconds').png", exec $apply
# Selection screenshot
bindsym --release Shift+Print exec notify-send "select area"; exec "scrot ~/Pictures/screens/$(date --iso-8601='seconds').png -s -e 'xclip -selection c -t image/png < $f'", exec $apply

# workspace-based startup shortcuts
bindsym $mod+F1 exec $open; exec thunderbird
bindsym $mod+F2 exec $open; exec firefox
bindsym $mod+F4 exec $open; exec intellij-idea-ultimate-edition
bindsym $mod+F8 exec $open; exec steam
bindsym $mod+F10 exec $open; exec discord, exec discord-ptb # launch any of those two
# letter-based
bindsym $mod+c exec $open; exec gnome-calculator
bindsym $mod+e exec $open; exec urxvt -e "ranger"
# for dat fancy new keyboard
bindsym XF86Calculator exec $open; exec gnome-calculator
bindsym XF86Mail exec $open; exec thunderbird

  #######################
 ## WORKSPACE SECTION ##
#######################

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
#set $ws1 "1 "
#set $ws2 "2 "
#set $ws3 "3 "
#set $ws4 "4 "
#set $ws5 "5 "
#set $ws6 "6 "
#set $ws7 "7 "
#set $ws8 "8 "
#set $ws9 "9 "
#set $ws10 "10 "
# polybar:
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# unused symbols:  

###########################
# assigning workspaces, use 
# xprop | grep "CLASS" 
# to find the class
# (use the last value)

# media players
#for_window [class="Spotify"] move to workspace $ws10 # real mischievous player
assign [class="Clementine"] $ws10
assign [class="mpv"] $ws9

# creativity
assign [class="Gimp"] $ws5
assign [class="com.oracle.javafx.scenebuilder.app.SceneBuilderApp"] $ws5 # it build the scene properly

# dev tools
assign [class="jetbrains-idea"] $ws4

# web browser(s)
assign [class="firefox"] $ws2

# chat apps
assign [class="discord"] $ws10

# games?
assign [class="Steam"] $ws8

#########################
# float make
for_window [class="Lxappearance"] floating enable
for_window [title="alsamixer"] floating enable
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="qt5ct"] floating enable sticky enable
for_window [class="Gnome-calculator"] floating enable border none
for_window [class="Pamac-manager"] floating enable border none
for_window [class="Godot_Engine"] floating enable border normal
for_window [class="XClock"] floating enable border pixel
# my own sanity
for_window [class="MainApp"] floating enable border normal
for_window [class="\.Main$"] floating enable border normal


########################
# switch to workspace
bindsym $mod+1 workspace $ws1, exec $browse
bindsym $mod+2 workspace $ws2, exec $browse
bindsym $mod+3 workspace $ws3, exec $browse
bindsym $mod+4 workspace $ws4, exec $browse
bindsym $mod+5 workspace $ws5, exec $browse
bindsym $mod+6 workspace $ws6, exec $browse
bindsym $mod+7 workspace $ws7, exec $browse
bindsym $mod+8 workspace $ws8, exec $browse
bindsym $mod+9 workspace $ws9, exec $browse
bindsym $mod+0 workspace $ws10, exec $browse

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1, exec $apply
bindsym $mod+Shift+2 move container to workspace $ws2, exec $apply
bindsym $mod+Shift+3 move container to workspace $ws3, exec $apply
bindsym $mod+Shift+4 move container to workspace $ws4, exec $apply
bindsym $mod+Shift+5 move container to workspace $ws5, exec $apply
bindsym $mod+Shift+6 move container to workspace $ws6, exec $apply
bindsym $mod+Shift+7 move container to workspace $ws7, exec $apply
bindsym $mod+Shift+8 move container to workspace $ws8, exec $apply
bindsym $mod+Shift+9 move container to workspace $ws9, exec $apply
bindsym $mod+Shift+0 move container to workspace $ws10, exec $apply

####################
# switch em up
workspace_auto_back_and_forth yes
# navigate back 'n forth
#bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth; workspace back_and_forth
#navigate workspaces next / previous
bindsym Mod1+Tab workspace next, exec $browse
bindsym Mod1+Shift+Tab workspace prev, exec $browse
bindsym Mod1+Ctrl+Right workspace next, exec $browse
bindsym Mod1+Ctrl+Left workspace prev, exec $browse

# credits https://gist.github.com/magujs/f8060343b9aedc7e6514
set $mode-ws-move Move workspace to other monitor or set layout

mode "$mode-ws-move" {
    bindsym Up move workspace to output up, exec $toggle
    bindsym Down move workspace to output down, exec $toggle
    bindsym Left move workspace to output left, exec $toggle
    bindsym Right move workspace to output right, exec $toggle

    bindsym k move workspace to output up, exec $toggle
    bindsym j move workspace to output down, exec $toggle
    bindsym h move workspace to output left, exec $toggle
    bindsym l move workspace to output right, exec $toggle

    bindsym a exec ~/.screenlayout/alternative.sh && notify-send "Alternative screen layout set", exec $toggle
    bindsym d exec ~/.screenlayout/default.sh && notify-send "Default screen layout set", exec $toggle

    bindsym Return mode "default", exec $apply
    bindsym Escape mode "default", exec $apply
    bindsym $mod+m mode "default", exec $apply
}

bindsym $mod+m mode "$mode-ws-move", exec $shutter

################################
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

##############################
# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default", exec $apply
    bindsym Escape mode "default", exec $apply
    bindsym $mod+r mode "default", exec $apply
}

bindsym $mod+r mode "resize", exec $shutter

################################
# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     gaps inner current set 0

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     gaps inner all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

###############################################
# Set shut down, restart and locking features
bindsym $mod+Ctrl+x mode "$mode_system", exec $shutter
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default", exec $close
    bindsym Escape mode "default", exec $close
}


  ###################
 ## COLOR SECTION ##
###################

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $dimtxt i3wm.color6 #f0f0f0
set_from_resource $crisp i3wm.color5 #f0f0f0
set_from_resource $sushi i3wm.color4 #f0f0f0
set_from_resource $slush i3wm.color3 #f0f0f0
set_from_resource $bg i3wm.color1 #f0f0f0
set_from_resource $mellow i3wm.color1 #f0f0f0
set_from_resource $dark i3wm.color0 #f0f0f0

# dem colors:
# SET OF DANK
# 0 is dark background (I bet)
# 8 is uglish white-theme thing? omg...
# SET OF ORENGI:
# 1 is mellow nice bg candidate
# 2 is radical background
# SET OF PURPLISH
# 3 is mellow nicety, matching with 6 for nice unfocus
# 4 is related
# SET OF YELLOWS
# 5 is a stronger 6
# 6 can be dim text
# 7 is text candidate

# class                 border  backgr. text indicator child_border
client.focused          $bg     $bg     $fg  $bg       $bg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg
client.background $bg # o rly?

# LAUNCH THE MENU
# dmenu no more
bindsym $mod+Shift+d exec rofi -show run & $menu
bindsym $mod+d exec rofi -show drun -show-icons & $menu
bindsym $mod+a exec "rofi -combi-modi window,drun -show combi -show-icons & $menu"
bindsym $mod+Tab exec rofi -show window -show-icons & $menu

# lock
# bindsym $mod+Shift+x exec i3lock -uf --color=421820 # 475263
bindsym $mod+Shift+x exec betterlockscreen -l -t "$(fortune lock || echo Something went wrong)", exec $shutter
#bindsym $mod+Shift+x exec i3lock -f --indicator --color=$dark --verifcolor=$fga #--wrongcolor=$slush

#####################
# AUTOSTART SECTION #
#####################

exec --no-startup-id mpv $HOME/.sounds/startup.wav &

# Compositor
# remember -b to make compton run as bg process
exec --no-startup-id picom -b --dbus --config ~/.config/picom/picom.conf

# Polybar
exec --no-startup-id ~/.config/polybar/launch.sh
# exec --no-startup-id killall polybar; polybar -r sunset

#####################
# system-specific twingles
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & eval $(gnome-keyring-daemon -s --components=pkcs11,secrets,ssh,gpg) & # auth error

# create layout script with arandr or by hand, put there
exec --no-startup-id ~/.screenlayout/default.sh

exec_always --no-startup-id xinput set-prop 14 324 1 # natural scrolling (on this laptop)
exec_always --no-startup-id xinput set-prop 14 316 1 # enable tapping (includes middle-click)
# run xinput list to get device ID
# run xinput list-props [ID] to get ID of natural scroll or other property
# replace numbers in above command

# NUMLOCK ON LOGIN
exec_always --no-startup-id numlockx on

####################
# various services
exec --no-startup-id redshift-gtk # you got a config file now
exec_always --no-startup-id dunst # colors adjusted thru pywal template

exec --no-startup-id dropbox
exec --no-startup-id pamac-tray # update notifier
exec --no-startup-id nm-applet # install network-manager-applet

# TODO investigate how to prevent xautolock from locking while playing video
#exec --no-startup-id xautolock -time 12 -locker blurlock # time in mins

# whenever you kill the gnome here...
exec --no-startup-id /usr/bin/xfce-power-manager # for power management
#exec --no-startup-id libinput-gestures-setup start # possible thing 4 touchpad gestures

# To know what has changed in the home folder:
# find ~/ -mmin -5 -type f

